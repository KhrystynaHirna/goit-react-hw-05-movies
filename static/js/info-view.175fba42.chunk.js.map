{"version":3,"file":"static/js/info-view.175fba42.chunk.js","mappings":"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","sources":["api/Api.jsx","webpack://react-homework-template/./src/views/info/MovieInfo.module.css?e506","webpack://react-homework-template/./src/components/button/Button.module.css?8a78","components/button/Button.jsx","views/info/MovieInfo.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '797c8d09920f943adb703c8d278f5556';\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies() {\n    return fetchMovies(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\nexport function fetchSearchMovies(query) {\n    return fetchMovies(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n}\nexport function fetchMoviesInfo(id) {\n    return fetchMovies(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n}\nexport function fetchMoviesReviews(id) {\n    return fetchMovies(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n}\nexport function fetchMoviesActors(id) {\n    return fetchMovies(`${BASE_URL}movie/${id}/actors?api_key=${API_KEY}`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__UTLtA\",\"img\":\"MovieInfo_img__iFREa\",\"title\":\"MovieInfo_title__sA+kL\",\"navItem\":\"MovieInfo_navItem__PsyWh\",\"nav\":\"MovieInfo_nav__R5hYO\"};","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__I+3kX\",\"Container\":\"Button_Container__hL4TP\"};","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nexport default function Button({ onClick }) {\n    return (\n        <div className={s.Container}>\n            <button type=\"button\" className={s.Button} onClick={onClick}>\n            Go back\n           </button>\n        </div>\n        \n    )\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};","import { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  Route,\n  Routes,\n  NavLink,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport * as Api from '../../api/Api';\nimport s from './MovieInfo.module.css';\nimport Button from 'components/button/Button';\n\nconst Cast = lazy(() =>\n  import('../cast/Cast' /* webpackChunkName: \"cast-view\" */)\n);\nconst Reviews = lazy(() =>\n  import('../reviews/Reviews' /* webpackChunkName: \"reviews-view\" */)\n);\n\nexport default function MovieInfo() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const { title, genres, overview, vote_average } = movie;\n  const userScore = vote_average * 10;\n  const src = `https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`;\n  let movieGenres = [];\n  const [page] = useState(location.state.from);\n  let navigate = useNavigate();\n\n  function onClick() {\n    navigate(page);\n  }\n\n  if (genres) {\n    movie.genres.map(({ name }) => movieGenres.push(name));\n  }\n\n  useEffect(() => {\n    Api.fetchMoviesInfo(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    movie && (\n      <>\n        <Button onClick={onClick} />\n        <div className={s.wrapper}>\n          <img src={src} alt={movie.title} className={s.img} />\n          <div className={s.info}>\n            <h2 className={s.title}>{title}</h2>\n            <p className={s.text}>User score: {userScore}%</p>\n            <h3 className={s.title}>Overview</h3>\n            <p className={s.text}>{overview}</p>\n            <h3 className={s.title}>Genres</h3>\n            <p className={s.text}>{movieGenres.join(', ')}</p>\n          </div>\n        </div>\n        <div>\n          <h3 className={s.title}>Additional information</h3>\n          <nav className={s.nav}>\n            <NavLink\n              to={`cast`}\n              state={{ from: location }}\n              className={s.navItem}\n              style={({ isActive }) => ({\n                color: isActive ? 'blue' : 'black',\n              })}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              to={`reviews`}\n              state={{ from: location }}\n              className={s.navItem}\n              style={({ isActive }) => ({\n                color: isActive ? 'blue' : 'black',\n              })}\n            >\n              Reviews\n            </NavLink>\n          </nav>\n          <Suspense fallback={<div>Please wait...</div>}>\n            <Routes>\n              <Route exact path=\"/cast\" element={<Cast />} />\n              <Route path=\"/reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </div>\n      </>\n    )\n  );\n}"],"names":["BASE_URL","API_KEY","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","fetchPopularMovies","fetchSearchMovies","query","fetchMoviesInfo","id","fetchMoviesReviews","fetchMoviesActors","Button","onClick","className","s","type","Cast","lazy","Reviews","MovieInfo","movieId","useParams","useState","movie","setMovie","location","useLocation","title","genres","overview","userScore","vote_average","src","poster_path","movieGenres","state","from","page","navigate","useNavigate","map","name","push","useEffect","Api","then","alt","join","to","style","color","isActive","Suspense","fallback","exact","path","element"],"sourceRoot":""}